test_name: Make sure Labware Position Check loads do not cause deck conflicts in the protocol itself.

marks:
  - usefixtures:
    - ot2_server_base_url
  - parametrize:
      # Try loading the Labware Position Check labware in every slot.
      key: slotName
      vals: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11']

stages:
  - name: Upload the protocol
    request:
      url: '{ot2_server_base_url}/protocols'
      method: POST
      files:
        files: tests/integration/protocols/load_one_labware_one_module_2_14.py
    response:
      status_code: 201
      save:
        json:
          protocol_id: data.id

  - name: Create a run from the protocol
    request:
      url: '{ot2_server_base_url}/runs'
      method: POST
      json:
        data:
          protocolId: '{protocol_id}'
    response:
      status_code: 201
      save:
        json:
          run_id: data.id

  # Load a labware somewhere that the protocol will also load something.
  # We're testing that the protocol proceeds as if this labware didn't exist--
  # in other words, that this labware doesn't cause a deck conflict error.
  - name: Load a labware as if this were Labware Position Check
    request:
      url: '{ot2_server_base_url}/runs/{run_id}/commands'
      method: POST
      params:
        waitUntilComplete: true
      json:
        data:
          commandType: loadLabware
          params:
            location:
              slotName: '{slotName}'
            loadName: agilent_1_reservoir_290ml
            namespace: opentrons
            version: 1
          key: lpcLoadLabwareKey
          intent: setup
    response:
      status_code: 201
      strict:
        - json:off  # Ignore fields other than status.
      json:
        data:
          status: "succeeded"

  - name: Play the run
    request:
      url: '{ot2_server_base_url}/runs/{run_id}/actions'
      method: POST
      json:
        data:
          actionType: play
    response:
      status_code: 201

  - name: Wait for the run to complete
    max_retries: 10
    delay_after: 0.1
    request:
      url: '{ot2_server_base_url}/runs/{run_id}'
      method: GET
    response:
      status_code: 200
      strict:
        - json:off
      json:
        data:
          status: succeeded

  - name: Check that the commands all completed successfully
    request:
      url: '{ot2_server_base_url}/runs/{run_id}/commands'
      method: GET
      params:
        cursor: 0
        pageLength: 999
    response:
      status_code: 200
      json:
        links: !anydict
        meta:
          cursor: 0
          totalLength: 4
        data:
          # Initial home
          - id: !anystr
            key: !anystr
            commandType: home
            createdAt: !anystr
            startedAt: !anystr
            completedAt: !anystr
            status: succeeded
            params: { }
          # The labware load from our simulated Labware Position Check:
          - id: !anystr
            key: lpcLoadLabwareKey
            commandType: loadLabware
            createdAt: !anystr
            startedAt: !anystr
            completedAt: !anystr
            status: succeeded
            params:
              location:
                slotName: '{slotName}'
              loadName: agilent_1_reservoir_290ml
              namespace: opentrons
              version: 1
            intent: setup
          # The labware loads from the protocol:
          - id: !anystr
            key: !anystr
            commandType: loadLabware
            createdAt: !anystr
            startedAt: !anystr
            completedAt: !anystr
            status: succeeded
            params:
              location:
                slotName: '1'
              loadName: biorad_96_wellplate_200ul_pcr
              namespace: opentrons
              version: 2
          - id: !anystr
            key: !anystr
            commandType: loadModule
            createdAt: !anystr
            startedAt: !anystr
            completedAt: !anystr
            status: succeeded
            params:
              location:
                slotName: '3'
              model: heaterShakerModuleV1

